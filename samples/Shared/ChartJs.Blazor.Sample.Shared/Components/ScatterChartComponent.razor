@using ChartJs.Blazor.ChartJS.Common.Properties
@using ChartJs.Blazor.Charts
@using ChartJs.Blazor.ChartJS.ScatterChart
@using ChartJs.Blazor.ChartJS.LineChart
@using ChartJs.Blazor.Util

<h1>Scatter Chart</h1>
<div class="row">
    <button class="btn btn-primary" @onclick="OnClick">Add Dataset</button>
</div>
<Chart @ref="_scatterChartJs"
        Config="@_config"
        TConfig="ScatterConfig"
        Width="600"
        Height="300"/>

@code {
    private ScatterConfig _config;
    private Chart<ScatterConfig> _scatterChartJs;

    protected override void OnInitialized()
    {
        _config = new ScatterConfig
        {
            Options = new LineOptions
            {
                Title = new OptionsTitle
                {
                    Text = "My Random points",
                    Display = true
                }
            }
        };

        _config.Data.Datasets.Add(GetNewDataset());
        _config.Data.Datasets.Add(GetNewDataset());
    }

    public async Task OnClick()
    {
        _config.Data.Datasets.Add(GetNewDataset());
        await _scatterChartJs.Update();
    }

    private ScatterDataset GetNewDataset()
    {
        ScatterDataset dataset = new ScatterDataset
        {
            Label = $"Dataset {_config.Data.Datasets.Count + 1}",
            BackgroundColor = ColorUtil.RandomColorString(),
            BorderColor = ColorUtil.RandomColorString(),
            ShowLine = false,
            PointRadius = 5,
            PointHitRadius = 5,
            PointHoverRadius = 8
        };

        dataset.AddRange(PointUtil.GetRandomPoints());

        return dataset;
    }
}
