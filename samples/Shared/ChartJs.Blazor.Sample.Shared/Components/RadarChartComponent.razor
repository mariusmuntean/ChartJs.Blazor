@using ChartJs.Blazor.ChartJS.Common.Properties
@using ChartJs.Blazor.ChartJS.RadarChart
@using ChartJs.Blazor.Charts
@using ChartJs.Blazor.Util

<h1>Scatter Chart</h1>
<div class="row">
    <button class="btn btn-primary" @onclick="OnClick">Add Dataset</button>
</div>
<Chart @ref="_radarChartJs"
        Config="@_config"
        TConfig="RadarConfig"
        Width="600"
        Height="300"/>

@code {
    private RadarConfig _config;
    private Chart<RadarConfig> _radarChartJs;

    private Random _rand = new Random();

    protected override void OnInitialized()
    {
        _config = new RadarConfig
        {
            Options = new RadarOptions
            {
                Title = new OptionsTitle
                {
                    Display = true,
                    Text = "Participant's scores on the big-five"
                }
            }
        };

        _config.Data.Labels.AddRange(new[] { "Extraversion", "Agreeableness", "Conscientiousness", "Neuroticism", "Openness/Intellect" });
        _config.Data.Datasets.Add(GetNewDataset());
    }

    public async Task OnClick()
    {
        _config.Data.Datasets.Add(GetNewDataset());
        await _radarChartJs.Update();
    }

    private RadarDataset GetNewDataset()
    {
        RadarDataset dataset = new RadarDataset
        {
            Label = $"Participant {_config.Data.Datasets.Count + 1}",
            BorderColor = ColorUtil.RandomColorString()
        };

        dataset.AddRange(_rand.NextDouble(), _rand.NextDouble(), _rand.NextDouble(), _rand.NextDouble(), _rand.NextDouble());

        return dataset;
    }

}
