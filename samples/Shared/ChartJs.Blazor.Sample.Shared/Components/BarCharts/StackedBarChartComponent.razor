@using ChartJs.Blazor.ChartJS.BarChart
@using ChartJs.Blazor.ChartJS.BarChart.Axes
@using ChartJs.Blazor.ChartJS.Common.Axes
@using ChartJs.Blazor.Charts
@using ChartJs.Blazor.ChartJS.Common.Properties
@using ChartJs.Blazor.Util

<h1>Stacked Bar Chart</h1>

<Chart @ref="_barChartJs"
           Config="@_config"
           TConfig="ChartJs.Blazor.ChartJS.BarChart.BarConfig"
           Width="600"
           Height="300" />

@code {
    private BarConfig _config;
    private Chart<BarConfig> _barChartJs;

    protected override void OnInitialized()
    {
        _config = new BarConfig
        {
            Options = new BarOptions
            {
                Title = new OptionsTitle
                {
                    Display = true,
                    Text = "Sample chart from Blazor"
                },
                Scales = new BarScales
                {
                    XAxes = new List<CartesianAxis>
                    {
                        new BarCategoryAxis
                        {
                            BarThickness = BarThickness.Flex,
                            Stacked = true
                        }
                    }
                },
                Responsive = true
            }
        };

        _config.Data.Labels.AddRange(new[] { "A", "B", "C", "D" });

        var barSet1 = new BarDataset<double>
        {
            Label = "Red",
            BackgroundColor = ColorUtil.RandomColorString(),
            BorderWidth = 1,
            HoverBackgroundColor = ColorUtil.ColorString(0, 0, 0, 0.1),
            HoverBorderColor = ColorUtil.RandomColorString(),
            HoverBorderWidth = 1,
            BorderColor = "#ffffff",
        };

        barSet1.AddRange(new double[] { 4, 3, 2, 1 });
        _config.Data.Datasets.Add(barSet1);

        var barSet2 = new BarDataset<double>
        {
            Label = "Green",
            BackgroundColor = ColorUtil.RandomColorString(),
            BorderWidth = 1,
            HoverBackgroundColor = ColorUtil.ColorString(0, 0, 0, 0.1),
            HoverBorderColor = ColorUtil.RandomColorString(),
            HoverBorderWidth = 1,
            BorderColor = "#ffffff",
        };

        barSet2.AddRange(new double[] { 1, 5, 10, 15 });
        _config.Data.Datasets.Add(barSet2);

        var barSet3 = new BarDataset<double>
        {
            Label = "Blue",
            BackgroundColor = ColorUtil.RandomColorString(),
            BorderWidth = 1,
            HoverBackgroundColor = ColorUtil.ColorString(0, 0, 0, 0.1),
            HoverBorderColor = ColorUtil.RandomColorString(),
            HoverBorderWidth = 1,
            BorderColor = "#ffffff",
        };

        barSet3.AddRange(new double[] { 5, 6, 7, 8 });
        _config.Data.Datasets.Add(barSet3);
    }
}
